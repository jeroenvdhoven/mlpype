pandas_sql:
  # please make sure the class is an importable callable
  # this can be a class constructor or a function.
  callable: mlpype.sklearn.data.SqlSource
  args:
    sql: select * from database.table
    con: http://<your database url>
dataframe:
  # This will create a fixed DataFrame to read using this source.
  callable: mlpype.sklearn.data.DataFrameSource
  args:
    df:
      # We can instantiate complex objects in the same way 
      # DataSource's are instantiated:
      callable: pandas.DataFrame
      args:
        data:
          x: 
            - 1.0
            - 2.0
          y:
            - "a"
            - "b"
spark_sql:
  callable: mlpype.spark.data.SparkSqlSource
  args:
    query: select * from dummy_data
    spark_session: 
      # You can access any function or class that your sys.path
      # can access, including local files.
      callable: examples.catalog.spark_session.get_default_session
      # It's also possible to use static methods of classes
      # This only runs 1 layer deep: methods of results of methods
      # cannot be accessed.
      # callable: pyspark.sql.SparkSession:getActiveSession
      args: {}