[project]
name = "mlpype"
authors = [
    {name = "Jeroen van den Hoven"},
]
description = "Standardise model training across libraries"
readme = "README.md"
requires-python = ">=3.9"
version = "0.6.7"
license = {"text" = "MIT"}

dependencies = [
    "mlpype-base", 
    "mlpype-fastapi",
    "mlpype-hyperopt",
    "mlpype-lightgbm", 
    "mlpype-matplotlib",
    "mlpype-mlflow",
    "mlpype-sklearn",
    "mlpype-spark", 
    "mlpype-tensorflow",
    "mlpype-xgboost",
]

[project.optional-dependencies]
dev = [
    "pre-commit>=4.1.0",
    "build==0.8.0",
    "pypiserver==1.5.1",
    "twine==4.0.1",
    "importlib-metadata<8.0.0",
    "mkdocs==1.6.1",
    "mkdocs-material==9.5.42",
    "mkdocstrings[python]==0.26.2",
]
test = [
    "pytest>=8.3.3",
    "pytest-cov>=6.0.0",
    "pip>=25",
]


[tool.uv.sources]
mlpype-base = { workspace = true }
mlpype-fastapi = { workspace = true }
mlpype-hyperopt = { workspace = true }
mlpype-lightgbm = { workspace = true }
mlpype-matplotlib = { workspace = true }
mlpype-mlflow = { workspace = true }
mlpype-sklearn = { workspace = true }
mlpype-spark = { workspace = true }
mlpype-tensorflow = { workspace = true }
mlpype-xgboost = { workspace = true }


[tool.uv.workspace]
members = [
    "packages/mlpype-base", 
    "packages/mlpype-fastapi",
    "packages/mlpype-hyperopt",
    "packages/mlpype-lightgbm", 
    "packages/mlpype-matplotlib",
    "packages/mlpype-mlflow",
    "packages/mlpype-sklearn",
    "packages/mlpype-spark", 
    "packages/mlpype-tensorflow",
    "packages/mlpype-xgboost",
]

[build-system]
requires = ["setuptools>=75.8.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["packages"]

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 120
profile = "black"

[tool.pytest.ini_options]
markers = [
    "end_to_end: End to end test, tends to be slow.",
    "spark: uses Spark, will take extra time to set up.",
    "wheel: will do wheel integrations, will take extra time"
]
filterwarnings = [
    'ignore:Call to deprecated create function',  # Some tensorboard internal stuff
    'ignore:Creating a LegacyVersion has been deprecated',  # Some pip internal stuff
]   

[tool.black]
line-length = 120
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.pyc
  | build
  | dist
  | \.toml
)/
'''

[tool.mypy]
mypy_path = "mlpype"
ignore_missing_imports = true
disallow_untyped_defs = true
python_version = "3.10"
implicit_reexport = true

[tool.pydoclint]
style = 'google'
exclude = 'tests|examples'
skip-checking-short-docstrings = true
skip-checking-raises = true
allow-init-docstring = true
disable = ["E203"]

[tool.flake8]
# to match black
max-line-length = 120
exclude = [
    "tests/*",
    "docs/*",
    ".git/*"    
]
ignore = [
    # Imperative start of docstring
    "D401",
    # line break before binary operator, conflicts with black
    "W503",
    # Imported but unused. This one just gets things wrong often.
    "F401",
]
add_select = [
    # Does not work for now, but adding parameter checks would be useful
    "D417"
]

# pep257, numpy, or google
docstring-convention = "pep257"