name: test-pr
run-name: ${{ github.ref_name }} is being tested
on: push
jobs:
  test:
    runs-on: ubuntu-latest

    # Test for multiple python versions
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: adopt

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - uses: vemonet/setup-spark@v1
        with:
          spark-version: '3.2.1'
          hadoop-version: '3.2'

      - name: Install dependencies
        run: make dev-install

      - name: Install pre-commit
        run: make pre-commit-install

      - name: Run pre-commit
        run: make pre-commit-run

      - name: Test and coverage
        run: python -m pytest --cov-report term-missing --cov pype -ra --junitxml=junit/test-results-${{ matrix.python-version }}.xml
      
      - name: Upload test/covarage test results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
      
      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: junit/test-results-*.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: file
          thresholds: '60 80'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md